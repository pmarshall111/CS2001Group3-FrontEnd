[{"/home/peter/uni/projects/cs2001group3-frontend/src/index.js":"1","/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/PharmacyPreview.js":"2","/home/peter/uni/projects/cs2001group3-frontend/src/App.js":"3","/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/PharmacyPage.js":"4","/home/peter/uni/projects/cs2001group3-frontend/src/shared/TitleBar.js":"5","/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/AddPharmacyForm.js":"6","/home/peter/uni/projects/cs2001group3-frontend/src/config.js":"7","/home/peter/uni/projects/cs2001group3-frontend/src/reportWebVitals.js":"8","/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailPreview.js":"9","/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailPage.js":"10","/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailConfirmation.js":"11","/home/peter/uni/projects/cs2001group3-frontend/src/shared/FullPageCentered.js":"12","/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailInquiry.js":"13","/home/peter/uni/projects/cs2001group3-frontend/src/shared/List.js":"14","/home/peter/uni/projects/cs2001group3-frontend/src/shared/Quote.js":"15","/home/peter/uni/projects/cs2001group3-frontend/src/helper/convertTimestampToDate.js":"16"},{"size":500,"mtime":1606578955284,"results":"17","hashOfConfig":"18"},{"size":889,"mtime":1606592361471,"results":"19","hashOfConfig":"18"},{"size":758,"mtime":1608477875861,"results":"20","hashOfConfig":"18"},{"size":2214,"mtime":1607260188017,"results":"21","hashOfConfig":"18"},{"size":377,"mtime":1606589657957,"results":"22","hashOfConfig":"18"},{"size":2027,"mtime":1608399853203,"results":"23","hashOfConfig":"18"},{"size":310,"mtime":1608474659375,"results":"24","hashOfConfig":"18"},{"size":362,"mtime":1606578955284,"results":"25","hashOfConfig":"18"},{"size":1202,"mtime":1607260188017,"results":"26","hashOfConfig":"18"},{"size":2773,"mtime":1607260188005,"results":"27","hashOfConfig":"18"},{"size":3618,"mtime":1608488807809,"results":"28","hashOfConfig":"18"},{"size":295,"mtime":1608481441394,"results":"29","hashOfConfig":"18"},{"size":2619,"mtime":1608485431768,"results":"30","hashOfConfig":"18"},{"size":421,"mtime":1608480579708,"results":"31","hashOfConfig":"18"},{"size":184,"mtime":1608483363708,"results":"32","hashOfConfig":"18"},{"size":293,"mtime":1608488369716,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"cgboal",{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"39"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/peter/uni/projects/cs2001group3-frontend/src/index.js",[],["72","73"],"/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/PharmacyPreview.js",[],["74","75"],"/home/peter/uni/projects/cs2001group3-frontend/src/App.js",["76","77"],"/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/PharmacyPage.js",[],["78","79"],"/home/peter/uni/projects/cs2001group3-frontend/src/shared/TitleBar.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/pharmacy/AddPharmacyForm.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/config.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/reportWebVitals.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailPreview.js",["80","81","82"],"import React from 'react';\nimport Button from \"react-bootstrap/Button\";\n\nimport \"./EmailPreview.css\";\n\nconst EmailPreview = (props) => {\n    let backgroundColour;\n    if (props.status == \"accepted\") {\n        backgroundColour = \"green\";\n    } else if (props.status == \"unresponded\") {\n        backgroundColour = \"yellow\";\n    } else if (props.status == \"rejected\") {\n        backgroundColour = \"red\";\n    }\n    return (\n        <div className={`email-container`} style={{\"backgroundColor\": backgroundColour}}>\n            <div className={\"email-status\"}>{props.status.charAt(0).toUpperCase() + props.status.slice(1)}</div>\n            <div className={\"email-data\"}>\n                <p>Resident: </p><p>{props.resident}</p>\n                <p>Medication: </p><p>{props.medication}</p>\n                <p>Pharmacy: </p><p>{props.pharmacy}</p>\n                <p>Date requested: </p><p>{props.dateSent}</p>\n                <p>Date responded: </p><p>{props.dateResponded || \"-\"}</p>\n            </div>\n            <Button variant=\"primary\" block size={\"lg\"}>View Email</Button>\n            <Button variant=\"secondary\" block size={\"lg\"}>Resend</Button>\n        </div>\n    );\n}\n\nexport default EmailPreview;\n",["83","84"],"/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailPage.js",["85","86"],"import React from 'react';\n\nimport TitleBar from \"../shared/TitleBar\";\nimport Form from \"react-bootstrap/Form\";\n\nimport \"./EmailPage.css\";\n\nimport {backendUrl, authHeader} from \"../config\";\nimport EmailPreview from \"./EmailPreview\";\n\nclass EmailPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {emailType:\"all\", emails: []};\n    }\n\n    componentDidMount() {\n        this.getDataFromDb();\n    }\n\n    getDataFromDb() {\n        const options = {\n            withCredentials: true,\n            method: 'GET',\n            headers: {\n                'Authorization': authHeader\n            }\n        }\n        fetch(`http://${backendUrl}/email?careHomeName=abc`, options)\n            .then(response => response.text())\n            .then(response => {\n                console.log(JSON.parse(response))\n                this.setState({emails: JSON.parse(response)})\n            })\n    }\n\n    render() {\n        let {emails, emailType} = this.state;\n        // emails = [\n        //     {residentName: \"Gerald Hornet\", medicationName:\"Paracetamol 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"unresponded\"},\n        //     {residentName: \"Mary Whippersville\", medicationName:\"IbuProfen 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"accepted\"},\n        //     {residentName: \"Guy from trainspotting\", medicationName:\"1kg heroin\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"rejected\"}\n        // ]\n        let emailPreviews = emails.filter(x => emailType == \"all\" || x.status == emailType)\n            .map((email,idx) =>\n            <EmailPreview resident={email.residentName} medication={email.medicationName} pharmacy={email.pharmacyName}\n                          dateSent={email.dateSent} dateResponded={email.dateResponded} status={email.status} key={idx} />\n        );\n\n        return (\n            <main>\n                <TitleBar title={\"Emails Sent\"}>\n                    <Form.Control as={\"select\"} custom onChange={(e) => {\n                        console.log(e)\n                        console.log(e.target.value.toLowerCase())\n                        this.setState({emailType: e.target.value.toLowerCase()})}\n                    } >\n                        <option>All</option>\n                        <option>Accepted</option>\n                        <option>Unresponded</option>\n                        <option>Rejected</option>\n                    </Form.Control>\n                </TitleBar>\n                <div className={\"list\"}>\n                    {emailPreviews}\n                </div>\n            </main>\n        );\n    }\n}\n\nexport default EmailPage;\n","/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailConfirmation.js",["87"],"/home/peter/uni/projects/cs2001group3-frontend/src/shared/FullPageCentered.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/email/EmailInquiry.js",["88"],"/home/peter/uni/projects/cs2001group3-frontend/src/shared/List.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/shared/Quote.js",[],"/home/peter/uni/projects/cs2001group3-frontend/src/helper/convertTimestampToDate.js",[],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"89","replacedBy":"93"},{"ruleId":"91","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":3,"column":8,"nodeType":"97","messageId":"98","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"99","line":8,"column":8,"nodeType":"97","messageId":"98","endLine":8,"endColumn":20},{"ruleId":"89","replacedBy":"100"},{"ruleId":"91","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":8,"column":22,"nodeType":"104","messageId":"105","endLine":8,"endColumn":24},{"ruleId":"102","severity":1,"message":"103","line":10,"column":29,"nodeType":"104","messageId":"105","endLine":10,"endColumn":31},{"ruleId":"102","severity":1,"message":"103","line":12,"column":29,"nodeType":"104","messageId":"105","endLine":12,"endColumn":31},{"ruleId":"89","replacedBy":"106"},{"ruleId":"91","replacedBy":"107"},{"ruleId":"102","severity":1,"message":"103","line":44,"column":58,"nodeType":"104","messageId":"105","endLine":44,"endColumn":60},{"ruleId":"102","severity":1,"message":"103","line":44,"column":79,"nodeType":"104","messageId":"105","endLine":44,"endColumn":81},{"ruleId":"108","severity":1,"message":"109","line":29,"column":8,"nodeType":"110","endLine":29,"endColumn":10,"suggestions":"111"},{"ruleId":"108","severity":1,"message":"109","line":26,"column":8,"nodeType":"110","endLine":26,"endColumn":10,"suggestions":"112"},"no-native-reassign",["113"],"no-negated-in-lhs",["114"],["113"],["114"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'EmailPreview' is defined but never used.",["113"],["114"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["113"],["114"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.","ArrayExpression",["115"],["116"],"no-global-assign","no-unsafe-negation",{"desc":"117","fix":"118"},{"desc":"117","fix":"119"},"Update the dependencies array to be: [requestId]",{"range":"120","text":"121"},{"range":"122","text":"121"},[1411,1413],"[requestId]",[1149,1151]]