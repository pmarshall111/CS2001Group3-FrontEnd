[{"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/App.js":"1","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPage.js":"2","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/TitleBar.js":"3","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/tooltip/ResidentTooltip.js":"4","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationDose.js":"5","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/alerts/AlertsPage.js":"6","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/List.js":"7","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/ShowEmailContent.js":"8","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/helper/dateHelper.js":"9"},{"size":5752,"mtime":1613313186273,"results":"10","hashOfConfig":"11"},{"size":3750,"mtime":1613313186285,"results":"12","hashOfConfig":"11"},{"size":377,"mtime":1606589657957,"results":"13","hashOfConfig":"11"},{"size":1054,"mtime":1613313050560,"results":"14","hashOfConfig":"11"},{"size":2484,"mtime":1613312965575,"results":"15","hashOfConfig":"11"},{"size":4177,"mtime":1613312965567,"results":"16","hashOfConfig":"11"},{"size":421,"mtime":1610894327478,"results":"17","hashOfConfig":"11"},{"size":637,"mtime":1613312965571,"results":"18","hashOfConfig":"11"},{"size":400,"mtime":1613313050560,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"7v4c1w",{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/App.js",["40","41","42"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPage.js",["43","44"],"import React from 'react';\n\nimport TitleBar from \"../shared/TitleBar\";\nimport Form from \"react-bootstrap/Form\";\n\nimport \"./EmailPage.css\";\n\nimport {backendUrl} from \"../config\";\nimport EmailPreview from \"./EmailPreview\";\n\nimport {READY, ASKED_IF_READY, SENT_INITIAL_EMAIL, PROCESSING, INQUIRY, COMPLETE} from \"./EmailStatusCategories\";\nimport ShowEmailContent from \"./ShowEmailContent\";\n\n\nclass EmailPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {emailType:\"All\", emails: [], emailHtml: \"\", showEmailHtml: \"\"};\n    }\n\n    componentDidMount() {\n        this.getDataFromDb();\n    }\n\n    getDataFromDb() {\n        fetch(`${backendUrl}/email?careHomeId=0`)\n            .then(response => response.text())\n            .then(response => {\n                console.log(JSON.parse(response))\n                this.setState({emails: JSON.parse(response)})\n            })\n    }\n\n    showEmailContent(nonGuessableId) {\n        fetch(`${backendUrl}/email/show-email-content?id=${nonGuessableId}`)\n            .then(response => response.text())\n            .then(response => {\n                this.setState({emailHtml: JSON.parse(response).emailHtml, showEmailHtml: true})\n            })\n    }\n\n    hideEmailContent() {\n        this.setState({showEmailHtml: false, emailHtml: \"\"})\n    }\n\n    render() {\n        let {emails, emailType} = this.state;\n        // emails = [\n        //     {residentName: \"Gerald Hornet\", medicationName:\"Paracetamol 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"unresponded\"},\n        //     {residentName: \"Mary Whippersville\", medicationName:\"IbuProfen 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"accepted\"},\n        //     {residentName: \"Guy from trainspotting\", medicationName:\"1kg heroin\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"rejected\"}\n        // ]\n        console.log(emails)\n        let emailPreviews = emails.filter(x => emailType == \"All\" || x.status == emailType)\n            .map((email,idx) =>\n            <EmailPreview resident={email.residentName} medication={email.medicationName} pharmacy={email.pharmacyEmail} dateLastEmailSent={email.dateLastEmailSent}\n                          dateResponded={email.dateUpdatedByPharmacy} dateMedicationToBeReady={email.dateMedicationToBeReady} inquiryComment={email.pharmacyComment}\n                          status={email.status} nonGuessableId={email.nonGuessableId} showEmailContent={() => this.showEmailContent(email.nonGuessableId)} key={idx} />\n        );\n\n        return (\n            <main>\n                <TitleBar title={\"Emails Sent\"}>\n                    <Form.Control as={\"select\"} custom onChange={(e) => {\n                        console.log(e)\n                        console.log(e.target.value.toLowerCase())\n                        this.setState({emailType: e.target.value})}\n                    } >\n                        <option>All</option>\n                        <option>{SENT_INITIAL_EMAIL}</option>\n                        <option>{PROCESSING}</option>\n                        <option>{INQUIRY}</option>\n                        <option>{ASKED_IF_READY}</option>\n                        <option>{READY}</option>\n                        <option>{COMPLETE}</option>\n                    </Form.Control>\n                </TitleBar>\n                <div className={\"list\"}>\n                    {emailPreviews}\n                </div>\n                <ShowEmailContent show={this.state.showEmailHtml} close={() => this.hideEmailContent()} emailHtml={this.state.emailHtml}/>\n            </main>\n        );\n    }\n}\n\nexport default EmailPage;\n",["45","46"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/TitleBar.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/tooltip/ResidentTooltip.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationDose.js",["47","48","49"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/alerts/AlertsPage.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/List.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/ShowEmailContent.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/helper/dateHelper.js",[],{"ruleId":"50","severity":1,"message":"51","line":16,"column":8,"nodeType":"52","messageId":"53","endLine":16,"endColumn":21},{"ruleId":"50","severity":1,"message":"54","line":60,"column":15,"nodeType":"52","messageId":"53","endLine":60,"endColumn":35},{"ruleId":"50","severity":1,"message":"55","line":79,"column":15,"nodeType":"52","messageId":"53","endLine":79,"endColumn":32},{"ruleId":"56","severity":1,"message":"57","line":54,"column":58,"nodeType":"58","messageId":"59","endLine":54,"endColumn":60},{"ruleId":"56","severity":1,"message":"57","line":54,"column":79,"nodeType":"58","messageId":"59","endLine":54,"endColumn":81},{"ruleId":"60","replacedBy":"61"},{"ruleId":"62","replacedBy":"63"},{"ruleId":"50","severity":1,"message":"64","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":24},{"ruleId":"50","severity":1,"message":"65","line":5,"column":8,"nodeType":"52","messageId":"53","endLine":5,"endColumn":14},{"ruleId":"50","severity":1,"message":"66","line":12,"column":11,"nodeType":"52","messageId":"53","endLine":12,"endColumn":16},"no-unused-vars","'ParentTooltip' is defined but never used.","Identifier","unusedVar","'practiceTimelineData' is assigned a value but never used.","'medicationsAtTime' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["67"],"no-negated-in-lhs",["68"],"'useState' is defined but never used.","'Button' is defined but never used.","'times' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]