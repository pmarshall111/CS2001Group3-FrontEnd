[{"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPage.js":"1","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPreview.js":"2","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/config.js":"3","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationDose.js":"4","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/reportWebVitals.js":"5","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/tooltip/ParentTooltip.js":"6","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailInquiry.js":"7","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationForm.js":"8","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/FileUpload.js":"9","/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/FileUploadForm.js":"10"},{"size":3969,"mtime":1613580804547,"results":"11","hashOfConfig":"12"},{"size":3372,"mtime":1613582483687,"results":"13","hashOfConfig":"12"},{"size":50,"mtime":1613580804547,"results":"14","hashOfConfig":"12"},{"size":2484,"mtime":1613580804547,"results":"15","hashOfConfig":"12"},{"size":362,"mtime":1606578955284,"results":"16","hashOfConfig":"12"},{"size":1503,"mtime":1613580804547,"results":"17","hashOfConfig":"12"},{"size":2712,"mtime":1610894327474,"results":"18","hashOfConfig":"12"},{"size":5148,"mtime":1613580804547,"results":"19","hashOfConfig":"12"},{"size":733,"mtime":1613838294781,"results":"20","hashOfConfig":"12"},{"size":1516,"mtime":1613844502044,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24","usedDeprecatedRules":"25"},"7v4c1w",{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPage.js",["45","46"],"import React from 'react';\n\nimport TitleBar from \"../shared/TitleBar\";\nimport Form from \"react-bootstrap/Form\";\n\nimport \"./EmailPage.css\";\n\nimport {backendUrl} from \"../config\";\nimport EmailPreview from \"./EmailPreview\";\n\nimport {READY, ASKED_IF_READY, SENT_INITIAL_EMAIL, PROCESSING, INQUIRY, COMPLETE} from \"./EmailStatusCategories\";\nimport ShowEmailContent from \"./ShowEmailContent\";\n\n\nclass EmailPage extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {emailType:\"All\", emails: [], emailHtml: \"\", showEmailHtml: \"\", intervalId: -1};\n    }\n\n    componentDidMount() {\n        this.getDataFromDb();\n        this.setState({intervalId: setInterval(() => this.getDataFromDb(), 30000)}) //check email state every 30 seconds\n    }\n\n    componentWillUnmount() {\n        clearInterval(this.state.intervalId);\n    }\n\n    getDataFromDb() {\n        fetch(`${backendUrl}/email?careHomeId=0`)\n            .then(response => response.text())\n            .then(response => {\n                console.log(JSON.parse(response))\n                this.setState({emails: JSON.parse(response)})\n            })\n    }\n\n    showEmailContent(nonGuessableId) {\n        fetch(`${backendUrl}/email/show-email-content?id=${nonGuessableId}`)\n            .then(response => response.text())\n            .then(response => {\n                this.setState({emailHtml: JSON.parse(response).emailHtml, showEmailHtml: true})\n            })\n    }\n\n    hideEmailContent() {\n        this.setState({showEmailHtml: false, emailHtml: \"\"})\n    }\n\n    render() {\n        let {emails, emailType} = this.state;\n        // emails = [\n        //     {residentName: \"Gerald Hornet\", medicationName:\"Paracetamol 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"unresponded\"},\n        //     {residentName: \"Mary Whippersville\", medicationName:\"IbuProfen 20 tablets 25g\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"accepted\"},\n        //     {residentName: \"Guy from trainspotting\", medicationName:\"1kg heroin\", pharmacyName:\"Croyden corner\", dateSent:\"02-12-20 12:34\", dateResponded: null, status:\"rejected\"}\n        // ]\n        console.log(emails)\n        let emailPreviews = emails.filter(x => emailType == \"All\" || x.status == emailType)\n            .map((email,idx) =>\n            <EmailPreview resident={email.residentName} medication={email.medicationName} pharmacy={email.pharmacyEmail} dateLastEmailSent={email.dateLastEmailSent}\n                          dateResponded={email.dateUpdatedByPharmacy} dateMedicationToBeReady={email.dateMedicationToBeReady} inquiryComment={email.pharmacyComment}\n                          status={email.status} nonGuessableId={email.nonGuessableId} showEmailContent={() => this.showEmailContent(email.nonGuessableId)} key={idx} />\n        );\n\n        return (\n            <main>\n                <TitleBar title={\"Emails Sent\"}>\n                    <Form.Control as={\"select\"} custom onChange={(e) => {\n                        console.log(e)\n                        console.log(e.target.value.toLowerCase())\n                        this.setState({emailType: e.target.value})}\n                    } >\n                        <option>All</option>\n                        <option>{SENT_INITIAL_EMAIL}</option>\n                        <option>{PROCESSING}</option>\n                        <option>{INQUIRY}</option>\n                        <option>{ASKED_IF_READY}</option>\n                        <option>{READY}</option>\n                        <option>{COMPLETE}</option>\n                    </Form.Control>\n                </TitleBar>\n                <div className={\"list\"}>\n                    {emailPreviews}\n                </div>\n                <ShowEmailContent show={this.state.showEmailHtml} close={() => this.hideEmailContent()} emailHtml={this.state.emailHtml}/>\n            </main>\n        );\n    }\n}\n\nexport default EmailPage;\n",["47","48"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailPreview.js",["49"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/config.js",[],["50","51"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationDose.js",["52","53"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/reportWebVitals.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/tooltip/ParentTooltip.js",["54","55","56"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/email/EmailInquiry.js",["57"],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/medication/MedicationForm.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/FileUpload.js",[],"/home/peter/Documents/uni/projects/cs2001group3-frontend/src/shared/FileUploadForm.js",[],{"ruleId":"58","severity":1,"message":"59","line":59,"column":58,"nodeType":"60","messageId":"61","endLine":59,"endColumn":60},{"ruleId":"58","severity":1,"message":"59","line":59,"column":79,"nodeType":"60","messageId":"61","endLine":59,"endColumn":81},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"62","replacedBy":"70"},{"ruleId":"64","replacedBy":"71"},{"ruleId":"66","severity":1,"message":"67","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":24},{"ruleId":"66","severity":1,"message":"72","line":12,"column":11,"nodeType":"68","messageId":"69","endLine":12,"endColumn":16},{"ruleId":"66","severity":1,"message":"73","line":1,"column":16,"nodeType":"68","messageId":"69","endLine":1,"endColumn":25},{"ruleId":"66","severity":1,"message":"67","line":1,"column":27,"nodeType":"68","messageId":"69","endLine":1,"endColumn":35},{"ruleId":"66","severity":1,"message":"74","line":2,"column":8,"nodeType":"68","messageId":"69","endLine":2,"endColumn":18},{"ruleId":"75","severity":1,"message":"76","line":27,"column":8,"nodeType":"77","endLine":27,"endColumn":10,"suggestions":"78"},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-native-reassign",["79"],"no-negated-in-lhs",["80"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar",["79"],["80"],"'times' is assigned a value but never used.","'useEffect' is defined but never used.","'MedTooltip' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.","ArrayExpression",["81"],"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"83"},"Update the dependencies array to be: [requestId]",{"range":"84","text":"85"},[1226,1228],"[requestId]"]