[{"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/reportWebVitals.js":"1","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/medication/AddMedication.js":"2","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/audit/AddAudit.js":"3","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/index.js":"4","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/viewAudit/ViewAudit.js":"5","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/App.js":"6","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/viewAudit/View.js":"7"},{"size":362,"mtime":1607508714377,"results":"8","hashOfConfig":"9"},{"size":3940,"mtime":1613393738266,"results":"10","hashOfConfig":"9"},{"size":4790,"mtime":1613392696522,"results":"11","hashOfConfig":"9"},{"size":500,"mtime":1607508714371,"results":"12","hashOfConfig":"9"},{"size":1361,"mtime":1609770010976,"results":"13","hashOfConfig":"9"},{"size":1120,"mtime":1613393019508,"results":"14","hashOfConfig":"9"},{"size":2902,"mtime":1614035162115,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"1uhj2k0",{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"21","messages":"22","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":1,"source":"23"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29","usedDeprecatedRules":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/reportWebVitals.js",[],["35","36"],"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/medication/AddMedication.js",["37","38"],"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/audit/AddAudit.js",["39","40","41","42","43"],"'use strict';\nimport React, { Component, useEffect, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport ReactDOM from 'react-dom'\n\n\nclass AddAudit extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      audits: [],\n      isMorningCount: '',\n      countDoneOnDate: '',\n      cyclePredictedToEndOn: '',\n      count: ''\n    };\n\n    this.create = this.create.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  createAudit = (auditCount) => {\n    this.setState(prevState => ({\n      audits: [prevState.isMorningCount, prevState.countDoneOnDate, prevState.cyclePredictedToEndOn, prevState.count]\n    }));\n  }\n//   componentDidMount() {\n//     // get all entities - GET\n//     fetch(\"http://localhost:8080\", {\n//   \"method\": \"GET\",\n//   \"headers\": {\n//     'Content-Type': 'application/json',\n//   }\n// })\n// .then(response => response.json())\n// .then(response => {\n//   this.setState({\n//     audits: response\n//   })\n// })\n// .catch(err => { console.log(err);\n// });\n\n//   }\n\n  create(e) {\n    // add entity - POST\n    fetch(\"http://localhost:8080/addAudit\", {\n  \"method\": \"POST\",\n  \"headers\": {\n    \"content-type\": \"application/json\",\n    \"accept\": \"application/json\"\n  },\n  \"body\": JSON.stringify({\n    isMorningCount: this.state.isMorningCount,\n    countDoneOnDate: this.state.countDoneOnDate,\n    cyclePredictedToEndOn: this.state.cyclePredictedToEndOn,\n    count: this.state.count\n  })\n})\n.then(response => response.json())\n.then(response => {\n  console.log(response)\n})\n.catch(error => {\n  console.log(error);\n});\n\n    e.preventDefault();\n  }\n\n  handleChange(changeObject) {\n    this.setState(changeObject)\n  }\n\n  Reset = () =>{\n    this.setState({\n      audits:{}\n    });\n  };\n\n  render() {\n    return (\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-md-8\">\n              <h1 className=\"display-4 text-center\">Add Audit</h1>\n              <form className=\"d-flex flex-column\">\n                <legend className=\"text-center\">Add Audit</legend>\n\n                <label htmlFor=\"name\">\n                  Patient Name:\n                  <input\n                    name=\"name\"\n                    id=\"name\"\n                    type=\"text\"\n                    className=\"form-control\"\n                    value={this.state.name}\n                    onChange={(e) => this.handleChange({ name: e.target.value })}\n                    required\n                    />\n                </label>\n                <label htmlFor=\"count\">\n                  Count:\n                  <input\n                    name=\"count\"\n                    id=\"count\"\n                    type=\"number\"\n                    className=\"form-control\"\n                    value={this.state.count}\n                    onChange={(e) => this.handleChange({ count: e.target.value })}\n                    required\n                    />\n                </label>\n                <label htmlFor=\"isMorningCount\">\n                  Please tick for Day Count and leave blank for Evening Count:\n                  <input\n                    name=\"isMorningCount\"\n                    id=\"isMorningCount\"\n                    type=\"checkbox\"\n                    className=\"form-control\"\n                    value={this.state.isMorningCount}\n                    onChange={(e) => this.handleChange({ count: e.target.value })}\n                    required\n                    />\n                </label>\n                <label htmlFor=\"countDoneOnDate\">\n                  Please enter the date of this Count :\n                  <input\n                    name=\"countDoneOnDate\"\n                    id=\"countDoneOnDate\"\n                    type=\"date\"\n                    className=\"form-control\"\n                    value={this.state.countDoneOnDate}\n                    onChange={(e) => this.handleChange({ countDoneOnDate: e.target.value })}\n                    />\n                </label>\n                <label htmlFor=\"cyclePredictedToEndOn\">\n                  This Cycle is predicted to end on:\n                  <input\n                    name=\"staffId\"\n                    id=\"staffId\"\n                    type=\"numeric\"\n                    className=\"form-control\"\n                    value={this.state.staffId}\n                    onChange={(e) => this.handleChange({ staffId: e.target.value })}\n                    />\n                </label>\n                <input type=\"submit\" value=\"Submit Audit\" onClick={(e) => this.create(e)}/>\n        \n              </form>\n            </div>\n          </div>\n\n        </div>\n\n    );\n\n\n  }\n}\n\n\n\n// let domContainer = document.querySelector('#App');\n// ReactDOM.render(<AuditPreview />, domContainer);\n\nexport default AddAudit;\n","/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/index.js",[],["44","45"],"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/viewAudit/ViewAudit.js",["46","47"],"import React, { Component, useEffect } from 'react'\nimport { render } from 'react-dom'\nimport axios from 'axios';\nimport './ViewAudit.css'\nimport Loader from 'react-loader-spinner';\n\nexport default function ViewAudit() {\n  const [data, updateData] = React.useState([]);\n\n  let isLoading = true;\n\n  useEffect(()=>{\n    axios({\n      method: 'get',\n      url: '/Audit',\n    }).then(res=>{\n      console.log(res);\n      updateData(res.data)\n    });\n  },[]);\n\n  if (data.length > 0) isLoading = false;\n\n  return (\n    <div className=\"container\">\n      {isLoading ? (\n        <Loader type=\"ThreeDots\" color=\"#2BAD60\" height=\"100\" width=\"100\" />\n      ) : (\n          <table className=\"table\" aria-label=\"Table\">\n            <thead>\n              <tr>\n                <th>Patient Audits</th>\n              </tr>\n            </thead>\n            <tbody>\n              {data?.map(row => (\n                <tr key={row.id}>\n                  <td align=\"left\">{row.name}</td>\n                  <td align=\"left\">{row.staffId}</td>\n                  <td align=\"left\">{row.dayCount}</td>\n                  <td align=\"left\">{row.eveningCount}</td>\n                  <td align=\"left\">{row.initialMedicationCount}</td>\n                  <td align=\"left\">{row.date}</td>\n                </tr>\n              ))}\n            </tbody>\n          </table>\n      )}\n    </div>\n  );\n}\n",["48","49"],"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/App.js",["50"],"/Users/astancampbell/Documents/GitHub/CS2001Group3-FrontEnd/src/medication/viewAudit/View.js",["51"],{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","replacedBy":"55"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":16,"nodeType":"58","messageId":"59","endLine":1,"endColumn":25},{"ruleId":"56","severity":1,"message":"60","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":13},{"ruleId":"61","severity":1,"message":"62","line":1,"column":1,"nodeType":"63","messageId":"64","endLine":1,"endColumn":14,"fix":"65"},{"ruleId":"56","severity":1,"message":"57","line":2,"column":17,"nodeType":"58","messageId":"59","endLine":2,"endColumn":26},{"ruleId":"56","severity":1,"message":"66","line":2,"column":28,"nodeType":"58","messageId":"59","endLine":2,"endColumn":37},{"ruleId":"56","severity":1,"message":"67","line":2,"column":39,"nodeType":"58","messageId":"59","endLine":2,"endColumn":47},{"ruleId":"56","severity":1,"message":"68","line":4,"column":8,"nodeType":"58","messageId":"59","endLine":4,"endColumn":16},{"ruleId":"52","replacedBy":"69"},{"ruleId":"54","replacedBy":"70"},{"ruleId":"56","severity":1,"message":"57","line":1,"column":17,"nodeType":"58","messageId":"59","endLine":1,"endColumn":26},{"ruleId":"56","severity":1,"message":"71","line":2,"column":10,"nodeType":"58","messageId":"59","endLine":2,"endColumn":16},{"ruleId":"52","replacedBy":"72"},{"ruleId":"54","replacedBy":"73"},{"ruleId":"56","severity":1,"message":"74","line":3,"column":8,"nodeType":"58","messageId":"59","endLine":3,"endColumn":17},{"ruleId":"56","severity":1,"message":"75","line":17,"column":11,"nodeType":"58","messageId":"59","endLine":17,"endColumn":18},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'Component' is defined but never used.","Identifier","unusedVar","'Modal' is defined but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"78","text":"79"},"'useEffect' is defined but never used.","'useState' is defined but never used.","'ReactDOM' is defined but never used.",["76"],["77"],"'render' is defined but never used.",["76"],["77"],"'ViewAudit' is defined but never used.","'PickDay' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[0,13],""]