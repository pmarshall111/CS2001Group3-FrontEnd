[{"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\App.js":"1","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\Residentprofile.js":"2","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerProfile.js":"3","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\ResidentPreview.js":"4","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerPreview.js":"5","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\ResidentsList.js":"6","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerList.js":"7","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\AddCareWorkerForm.js":"8","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\email\\EmailInquiry.js":"9","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\TitleBar.js":"10","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\index.js":"11","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\medication\\AddMedication.js":"12","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\viewAudit\\MedicationCountPage.js":"13","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\audit\\MedicationCountForm.js":"14","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\pharmacy\\PharmacyPreview.js":"15","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\FullPageCentered.js":"16","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\email\\ShowEmailContent.js":"17","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\EditCareWorkerForm.js":"18","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\tooltip\\ParentTooltip.js":"19","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\EditResidentForm.js":"20","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\AddResidentForm.js":"21","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\Dashboard\\Dashboard.jsx":"22"},{"size":6917,"mtime":1615128762437,"results":"23","hashOfConfig":"24"},{"size":6211,"mtime":1615246287910,"results":"25","hashOfConfig":"24"},{"size":5526,"mtime":1615246235857,"results":"26","hashOfConfig":"24"},{"size":2107,"mtime":1615172190359,"results":"27","hashOfConfig":"24"},{"size":2169,"mtime":1615172156998,"results":"28","hashOfConfig":"24"},{"size":3844,"mtime":1615246124377,"results":"29","hashOfConfig":"24"},{"size":3485,"mtime":1615168825512,"results":"30","hashOfConfig":"24"},{"size":2290,"mtime":1615247856314,"results":"31","hashOfConfig":"24"},{"size":2781,"mtime":1614128785285,"results":"32","hashOfConfig":"24"},{"size":516,"mtime":1614128868245,"results":"33","hashOfConfig":"24"},{"size":616,"mtime":1615246124358,"results":"34","hashOfConfig":"24"},{"size":4066,"mtime":1615246124361,"results":"35","hashOfConfig":"24"},{"size":6096,"mtime":1615246124361,"results":"36","hashOfConfig":"24"},{"size":3132,"mtime":1615246124360,"results":"37","hashOfConfig":"24"},{"size":682,"mtime":1614128868242,"results":"38","hashOfConfig":"24"},{"size":308,"mtime":1614128785288,"results":"39","hashOfConfig":"24"},{"size":657,"mtime":1614128868239,"results":"40","hashOfConfig":"24"},{"size":2319,"mtime":1615248349904,"results":"41","hashOfConfig":"24"},{"size":1547,"mtime":1614128868246,"results":"42","hashOfConfig":"24"},{"size":3550,"mtime":1615247938386,"results":"43","hashOfConfig":"24"},{"size":3449,"mtime":1615247786901,"results":"44","hashOfConfig":"24"},{"size":4652,"mtime":1615248274013,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"gh87a9",{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"62"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"62"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"62"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"62"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"62"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":1,"source":"82","usedDeprecatedRules":"62"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\App.js",["99","100","101","102","103"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\Residentprofile.js",["104"],"import React, {useEffect, useState} from 'react';\r\nimport TitleBar from \"../../shared/TitleBar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./Residentprofile.css\";\r\nimport EditResidentForm from \"./EditResidentForm\";\r\nimport {backendUrl, imagesUrl} from \"../../config\";\r\nimport FileUploadBtn from \"../../shared/FileUploadBtn\";\r\nimport Timeline from \"../../shared/Timeline\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport MedicationCountsPage from \"../../medication/viewAudit/MedicationCountPage\";\r\n\r\n\r\n\r\nconst Residentprofile = (props) => {\r\n    const {resId, firstName, pharmacies} = props;\r\n\r\n    const [editForm, setEditForm] = useState(false);\r\n    const [residentImage, setResidentImage] = useState(\"\");\r\n    const [medicationDoses, setMedicationDoses] = useState([]);\r\n\r\n    const history = useHistory();\r\n\r\n    let archived = props.archived;\r\n    let residentId = props.resId;\r\n\r\n    useEffect(() => {\r\n        getResImg();\r\n        getResDosages();\r\n    }, []) //empty array to signify this func should only run once\r\n\r\n    const getResImg = () => {\r\n        fetch(`${imagesUrl}/resident/${resId}`)\r\n            .then(r => {\r\n                console.log(\"changing image\")\r\n                setResidentImage(\"\");\r\n                setTimeout(() => setResidentImage(`${imagesUrl}/resident/${resId}`), 100);\r\n            })\r\n    }\r\n\r\n    const getResDosages = () => {\r\n        fetch(`${backendUrl}/medication/schedule/?residentId=${resId}`)\r\n            .then(r => r.json())\r\n            .then(r => {\r\n                console.log(r)\r\n                const dosages = r.map(x => {\r\n                    return {...x, time: new Date(x.time), resident: x.residentName.split(\" \")[0], dose: x.dose, medicationName:x.medicationName}\r\n                })\r\n                setMedicationDoses(dosages);\r\n            })\r\n    }\r\n\r\n    function submit(e) {\r\n        e.preventDefault();\r\n        (archived ? archived=false : archived=true);\r\n        const data = { residentId, archived };\r\n        console.log(data);\r\n        fetch(`${backendUrl}/resident`, { method: \"PUT\", body: JSON.stringify(data), headers: { \"Content-Type\": \"application/json\" } })\r\n            .then(() => props.handleSubmission());\r\n    }\r\n\r\n    function ResidentDelete(k) {\r\n        k.preventDefault();\r\n        fetch(`${backendUrl}/resident/?residentId=${resId}`, { method: \"DELETE\", headers: { \"Content-Type\": \"application/json\" } })\r\n            .then(() => props.handleSubmission());\r\n    }\r\n\r\n    let residentImageSection;\r\n    if (residentImage !== \"\") {\r\n        residentImageSection = <div className={\"profile-pic\"} style={{\"backgroundImage\": `url(${imagesUrl}/resident/${resId})`}} alt=\"Resident profile image\" />\r\n    } else {\r\n        residentImageSection = <FileUploadBtn isResident={true} id={resId} name={firstName} onAddFile={() => getResImg()} />\r\n    }\r\n\r\n    if (window.location.pathname.split(\"/\")[3] === \"medication\") {\r\n        return <MedicationCountsPage resName={firstName} resId={resId} pharmacies={pharmacies} />\r\n    }\r\n\r\n    //oldImgSrc=\"https://i.imgur.com/MI2Pf2H.jpg\"\r\n    return (\r\n        <main>\r\n            <TitleBar title={\"Resident Profile\"}>\r\n                <Button variant=\"primary\" size=\"lg\" onClick={() => setEditForm(true)}>Edit Profile</Button>\r\n                <Button variant=\"primary\" size=\"lg\" onClick={() => history.push(`/resident/${props.resId}/medication`)}> Medication Details</Button>\r\n            </TitleBar>\r\n            <div className=\"container-fluid\">\r\n                <div className=\"row align-items-start\">\r\n                    <div className=\"col-md-3 .offset-md-2\">\r\n                        <div className={\"profile-img-container\"}>\r\n                            <div className={\"profile-pic-container\"}>\r\n                                {residentImageSection}\r\n                            </div>\r\n                            {residentImage !== \"\" ? <FileUploadBtn isResident={true} id={resId} name={firstName} onAddFile={() => getResImg()} edit={true} /> : \"\"}\r\n                        </div>\r\n                        <h1>{props.firstName} {props.archived ? \"[ARCHIVED]\" : props.surName}</h1>\r\n                        {props.archived ? \"\": \r\n                            <div>\r\n                                <h3>Age: {props.age} </h3>\r\n                                <h3>Guardian: {props.guardName} </h3>\r\n                                <h3>Contact Number: 02089991273 </h3>\r\n                                <h3>E-mail:example@hotmail.co.uk</h3>\r\n                            </div>\r\n                        }\r\n                        <br></br><br></br>\r\n                        <Button variant=\"secondary\" size=\"lg\" onClick={e => submit(e)}> {archived? \"Restore\" : \"Archive\"} </Button>\r\n                        <br></br><br></br>\r\n                        {archived? <Button variant=\"danger\" size=\"lg\" onClick={k => ResidentDelete(k)}> Delete </Button> : \"\" }\r\n                    </div>\r\n                    <div className=\"col-md-6\">\r\n                    {props.archived? \"\" :\r\n                        <div className={\"resident-bio\"}>\r\n                            <h1>Bio</h1>\r\n                            <p>{props.bio}</p>\r\n                        </div>\r\n                    }\r\n                    {props.archived? \"\" :\r\n                        <div>\r\n                            <h1>Medication Schedule</h1>\r\n                            <Timeline dosages={medicationDoses} />\r\n                        </div>\r\n                    }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            {editForm && <EditResidentForm\r\n                    show={editForm}\r\n                    resId={props.resId}\r\n                    firstName={props.firstName}\r\n                    surName={props.surName}\r\n                    age={props.age}\r\n                    guardianName={props.guardName}\r\n                    bio={props.bio}\r\n                    handleClose={() => setEditForm(false)} \r\n                    handleSubmission={() => {\r\n                        setEditForm(false);\r\n                        props.handleSubmission();\r\n                    }}\r\n                />}\r\n        </main>\r\n    );\r\n}\r\n\r\nexport default Residentprofile;\r\n","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerProfile.js",["105"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\ResidentPreview.js",["106","107","108","109","110"],"import React from 'react';\r\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\n// import Button from \"react-bootstrap/Button\";\r\n// import {EnvelopeFill, HouseFill, TelephoneFill} from \"react-bootstrap-icons\";\r\nimport Residentprofile from \"./Residentprofile\";\r\nimport ArchResProf from \"./ArchResProf\";\r\nimport \"./ResidentPreview.css\";\r\n\r\nconst ResidentPreview = (props) => {\r\n    const history = useHistory();\r\n    return (\r\n        <Router>\r\n            <div>\r\n                <div class=\"list-group\" onClick={() => history.push(`/resident/${props.resId}`)}>\r\n                <button type=\"button\" class=\"list-group-item list-group-item-action\">\r\n                        {props.firstName} {props.archived ? \"[ARCHIVED]\" : props.surName}\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </Router>\r\n\r\n    );\r\n}\r\nexport default ResidentPreview;\r\n\r\n\r\n// <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n//     {props.archived ?\r\n//         // If archived\r\n//         <Link to={'/ArchResProf'} className=\"nav-link\"> {props.firstName} [ARCHIVED]</Link>\r\n//         // else\r\n//         : <Link to={'/Residentprofile'} className=\"nav-link\"> {props.firstName} </Link>\r\n//     }\r\n// </nav>\r\n// <Switch>\r\n//     {props.archived ?\r\n//         // If archived\r\n//         <Route path='/ArchResProf' component={() => <ArchResProf\r\n//             handleSubmission={() => props.handleSubmission()}\r\n//             resId={props.resId}\r\n//             firstName={props.firstName}\r\n//             archived={props.archived}/>}/>\r\n//         // else\r\n//         : <Route path='/Residentprofile' component={() => <Residentprofile\r\n//             handleSubmission={() => props.handleSubmission()}\r\n//             resId={props.resId}\r\n//             bio={props.bio}\r\n//             age={props.age}\r\n//             guardName={props.guardName}\r\n//             firstName={props.firstName}\r\n//             surName={props.surName}\r\n//             archived={props.archived}/>}/>\r\n//     }\r\n// </Switch>\r\n",["111","112"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerPreview.js",["113","114","115","116"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\ResidentsList.js",["117"],"import React from 'react';\r\nimport TitleBar from \"../../shared/TitleBar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { backendUrl } from \"../../config\";\r\n\r\n//import \"./PharmacyPage.css\";\r\nimport AddResidentForm from \"./AddResidentForm\";\r\nimport ResidentPreview from './ResidentPreview';\r\nimport Residentprofile from \"./Residentprofile\";\r\n// import Residentprofile from './Residentprofile';\r\n\r\nclass ResidentsList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {residents: [], showForm: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromDb();\r\n    }\r\n\r\n    getDataFromDb() {\r\n        fetch(`${backendUrl}/resident/all?careHomeId=${this.props.careHomeId}`)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response)\r\n                if (!response.status || response.status === 200) {\r\n                    this.setState({residents: response})\r\n                }\r\n            })\r\n    }\r\n\r\n    handleSubmission() {\r\n        this.setState({showForm: false})\r\n        this.getDataFromDb();\r\n    }\r\n\r\n    render() {\r\n        let id = window.location.pathname.split(\"/\")[2];\r\n        console.log(id)\r\n\r\n        const {residents, showForm} = this.state;\r\n\r\n        console.log(this.state.residents, this.state.residents.length)\r\n\r\n        if (id) {\r\n            //need to go through all residents and find the one with this ID\r\n            const resident = this.state.residents.filter(x => x.residentId == id)[0]\r\n            if (resident) {\r\n                const {residentId, bio, age, guardName, firstName, surName, archived} = resident;\r\n                return (\r\n                    <Residentprofile\r\n                        resId={residentId}\r\n                        bio={bio}\r\n                        age={age}\r\n                        guardName={guardName}\r\n                        firstName={firstName}\r\n                        surName={surName}\r\n                        archived={archived}\r\n                    handleSubmission={() => this.handleSubmission()}\r\n                    pharmacies={this.props.pharmacies}\r\n                    />\r\n                )\r\n            }\r\n        }\r\n\r\n        //we don't add else here. designed so that if the ID isn't a resident, we still display the list.\r\n        let residentPreviews = residents.map((resident,idx) =>\r\n            <ResidentPreview handleSubmission={() => this.handleSubmission()}\r\n                                                archived={resident.archived} \r\n                                                firstName={resident.firstName} \r\n                                                surName={resident.surName}\r\n                                                resId={resident.residentId}\r\n                                                bio={resident.bio}\r\n                                                age={resident.age} \r\n                                                guardName={resident.guardianName}\r\n                                                key={idx} />\r\n        );\r\n        \r\n        \r\n        return (\r\n            <main>\r\n                <TitleBar title={\"My Residents\"}>\r\n                    <Button variant=\"primary\" size=\"lg\" onClick={() => this.setState({showForm: true})}>Add new</Button>\r\n                </TitleBar>\r\n                <div className={\"list\"}>\r\n                    {residentPreviews}\r\n                </div>\r\n                {showForm && <AddResidentForm\r\n                    show={showForm}\r\n                    handleClose={() => this.setState({showForm: false})} \r\n                    handleSubmission={() => this.handleSubmission()}\r\n                    careHomeId={this.props.careHomeId}\r\n                />}\r\n            </main>\r\n        );\r\n    }\r\n    \r\n}\r\n    export default ResidentsList;\r\n",["118","119"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\CareWorkerList.js",["120"],"import React from 'react';\r\nimport TitleBar from \"../../shared/TitleBar\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport { backendUrl } from \"../../config\";\r\n\r\n//import \"./PharmacyPage.css\";\r\nimport AddCareWorkerForm from \"./AddCareWorkerForm\";\r\nimport CareWorkerPreview from './CareWorkerPreview';\r\nimport CareWorkerProfile from \"./CareWorkerProfile\";\r\n// import CareWorkerProfile from './CareWorkerProfile';\r\n\r\nclass CareWorkerList extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {careWorkers: [], showForm: false };\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.getDataFromDb();\r\n    }\r\n\r\n    getDataFromDb() {\r\n        fetch(`${backendUrl}/careWorker/all?careHomeId=${this.props.careHomeId}`)\r\n            .then(response => response.json())\r\n            .then(response => {\r\n                console.log(response)\r\n                if (!response.status || response.status === 200) {\r\n                    this.setState({careWorkers: response})\r\n                }\r\n            })\r\n    }\r\n\r\n    handleSubmission() {\r\n        this.setState({showForm: false})\r\n        this.getDataFromDb();\r\n    }\r\n\r\n    render() {\r\n        let id = window.location.pathname.split(\"/\")[2];\r\n        console.log(id)\r\n\r\n        const {careWorkers, showForm} = this.state;\r\n\r\n        console.log(this.state.careWorkers, this.state.careWorkers.length)\r\n\r\n        if (id) {\r\n            //need to go through all residents and find the one with this ID\r\n            const careWorker = this.state.careWorkers.filter(x => x.careWorkerId == id)[0]\r\n            if (careWorker) {\r\n                const {careWorkerId, firstName, surName, archived} = careWorker;\r\n                return (\r\n                    <CareWorkerProfile\r\n                        cwId={careWorkerId}\r\n                        firstName={firstName}\r\n                        surName={surName}\r\n                        archived={archived}\r\n                        handleSubmission={() => this.handleSubmission()}/>\r\n                )\r\n            }\r\n        }\r\n\r\n        //we don't add else here. designed so that if the ID isn't a resident, we still display the list.\r\n        let careWorkerPreviews = careWorkers.map((careWorker,idx) =>\r\n            <CareWorkerPreview handleSubmission={() => this.handleSubmission()}\r\n                                                archived={careWorker.archived} \r\n                                                firstName={careWorker.firstName} \r\n                                                surName={careWorker.surName}\r\n                                                cwId={careWorker.careWorkerId}\r\n                                                key={idx} />\r\n        );\r\n        \r\n        \r\n        return (\r\n            <main>\r\n                <TitleBar title={\"My CareHome Workers\"}>\r\n                    <Button variant=\"primary\" size=\"lg\" onClick={() => this.setState({showForm: true})}>Add new</Button>\r\n                </TitleBar>\r\n                <div className={\"list\"}>\r\n                    {careWorkerPreviews}\r\n                </div>\r\n                {showForm && <AddCareWorkerForm\r\n                    show={showForm}\r\n                    handleClose={() => this.setState({showForm: false})} \r\n                    handleSubmission={() => this.handleSubmission()}\r\n                    careHomeId={this.props.careHomeId}\r\n                />}\r\n            </main>\r\n        );\r\n    }\r\n    \r\n}\r\n    export default CareWorkerList;\r\n","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\AddCareWorkerForm.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\email\\EmailInquiry.js",["121"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\TitleBar.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\index.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\medication\\AddMedication.js",["122","123"],"import React, {Component} from 'react';\r\n\r\nimport Form from \"react-bootstrap/Form\";\r\nimport Modal from \"react-bootstrap/Modal\";\r\nimport Button from \"react-bootstrap/Button\";\r\n\r\nclass AddMedication extends React.Component {\r\n    constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n        medications: [],\r\n        medicationName: '',\r\n        prescriptionCount: '',\r\n        description: '',\r\n        medicationClass: '',\r\n        dosage: '',\r\n        pharmacyName: ''\r\n      };\r\n\r\n      this.create = this.create.bind(this);\r\n      this.handleChange = this.handleChange.bind(this);\r\n    }\r\n  //   componentDidMount() {\r\n  //     // get all entities - GET\r\n  //     fetch(\"http://localhost:8080\", {\r\n  //   \"method\": \"GET\",\r\n  //   \"headers\": {\r\n  //     'Content-Type': 'application/json',\r\n  //   }\r\n  // })\r\n  // .then(response => response.json())\r\n  // .then(response => {\r\n  //   this.setState({\r\n  //     audits: response\r\n  //   })\r\n  // })\r\n  // .catch(err => { console.log(err);\r\n  // });\r\n\r\n  //   }\r\n\r\n    create(e) {\r\n      // add entity - POST\r\n      fetch(\"http://localhost:8080/addMedication\", {\r\n    \"method\": \"POST\",\r\n    \"headers\": {\r\n      \"content-type\": \"application/json\",\r\n      \"accept\": \"application/json\"\r\n    },\r\n\r\n    \"body\": JSON.stringify({\r\n      medicationName: this.state.medicationName,\r\n      prescriptionCount: this.state.prescriptionCount,\r\n      description: this.state.description,\r\n      medicationClass: this.state.medicationClass,\r\n      dosage: this.state.dosage,\r\n      pharmacyName: this.state.pharmacyName\r\n    })\r\n  })\r\n  .then(response => response.json())\r\n  .then(response => {\r\n    console.log(response)\r\n  })\r\n  .catch(err => {\r\n    console.log(err);\r\n  });\r\n\r\n      e.preventDefault();\r\n    }\r\n\r\n    handleChange(changeObject) {\r\n      this.setState(changeObject)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n          <div className=\"container\">\r\n          <h1 className=\"display-4 text-center\">Add Medication</h1>\r\n            <Form>\r\n\r\n                <Form.Label>Medication Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter medication name\"\r\n                            onChange={(e) => this.handleChange({ medicationName: e.target.value })}\r\n                            //value={medicationName}\r\n                />\r\n\r\n                <Form.Label>Prescription Count</Form.Label>\r\n                <Form.Control type=\"number\" placeholder=\"Enter number of tablets\"\r\n                            onChange={(e) => this.handleChange({prescriptionCount: e.target.value })}\r\n                            //value={prescriptionCount}\r\n                />\r\n\r\n                <Form.Label>Description</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter description\"\r\n                            onChange={(e) => this.handleChange({ description: e.target.value })}\r\n                            //value={description}\r\n                />\r\n\r\n                <Form.Label>Medication Class</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter medication class\"\r\n                            onChange={(e) => this.handleChange({ medicationClass: e.target.value })}\r\n                            //value={medicationClass}\r\n                />\r\n\r\n                <Form.Label>Dosage</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter dosage\"\r\n                            onChange={(e) => this.handleChange({ dosage: e.target.value })}\r\n                            //value={dosage}\r\n                />\r\n\r\n                <Form.Label>Pharmacy Name</Form.Label>\r\n                <Form.Control type=\"text\" placeholder=\"Enter Pharmacy Name\"\r\n                            onChange={(e) => this.handleChange({ pharmacyName: e.target.value })}\r\n                            //value={pharmacyName}\r\n                />\r\n\r\n            <Button variant=\"primary\" onClick={(e) => this.create(e)}>\r\n                Add new medication\r\n            </Button>\r\n        </Form>\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AddMedication;\r\n","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\viewAudit\\MedicationCountPage.js",["124","125","126","127","128","129","130","131"],"\r\nimport React, {useEffect, useState} from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport Table from 'react-bootstrap/Table';\r\nimport DatePicker from \"react-datepicker\";\r\nimport './ViewAudit.css' ;\r\n\r\nimport \"react-datepicker/dist/react-datepicker.css\";\r\nimport {convertToYYYYMMDD} from \"../../helper/convertTimestampToDate\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport {datesAreSameDay} from \"../../helper/dateHelper\";\r\nimport TitleBar from \"../../shared/TitleBar\";\r\nimport NewMedicationForm from \"../NewMedicationForm\";\r\nimport {FormCheck, FormControl, FormGroup, Modal} from \"react-bootstrap\";\r\nimport {Row} from \"react-bootstrap\";\r\nimport MedicationCountForm from \"../audit/MedicationCountForm\";\r\nimport {backendUrl} from \"../../config\";\r\nimport {ArrowLeft, ArrowRight} from \"react-bootstrap-icons\";\r\n\r\nconst MedicationCountPage = props => {\r\n    const [counts, setCounts] = useState([]);\r\n    const [selectedDate, setSelectedDate] = useState(null);\r\n    const [showAddMedicationForm, setShowAddMedicationForm] = useState(false);\r\n    const [showAddCountForm, setShowAddCountForm] = useState(false);\r\n    const [residentsMedications, setResidentsMedications] = useState([])\r\n\r\n    const {resName, medName, resId, pharmacies} = props;\r\n\r\n    useEffect(() => {\r\n        getCounts();\r\n        getMedications();\r\n    }, [])\r\n\r\n\r\n  const getCounts = () => {\r\n      fetch(`${backendUrl}/medicationcounts?resId=${resId}`)\r\n          .then(response => response.json())\r\n          .then(response => {\r\n              setCounts(response);\r\n          })\r\n  }\r\n\r\n  const getMedications = () => {\r\n      fetch(`${backendUrl}/medication/resident?residentId=${resId}`)\r\n          .then(r => r.json())\r\n          .then(r => {\r\n              setResidentsMedications(r)\r\n          })\r\n  }\r\n\r\n  const renderTableData = () => {\r\n    let auditsToDisplay = counts;\r\n    if (selectedDate != null) {\r\n      auditsToDisplay = auditsToDisplay.filter((x) => {\r\n        return datesAreSameDay(new Date(convertToYYYYMMDD(x.countDoneOnDate)), selectedDate);\r\n      })\r\n    }\r\n    return auditsToDisplay.map((audit, index) =>{\r\n      const {medCountId, count, countDoneOnDate, cyclePredictedToEndOn, medName,\r\n          careWorkerName, isMorningCount,medForResId} = audit\r\n      return(\r\n          <tr key={medCountId}>\r\n            <td>{medName}</td>\r\n            <td>{convertToYYYYMMDD(countDoneOnDate)}</td>\r\n              <td>{count}</td>\r\n            <td>{isMorningCount ? \"Morning\" : \"Evening\"}</td>\r\n            <td>{careWorkerName}</td>\r\n              <td>{cyclePredictedToEndOn == null ? \"-\" : convertToYYYYMMDD(cyclePredictedToEndOn)}</td>\r\n          </tr>\r\n      )\r\n    })\r\n  }\r\n\r\n    const changeDateByArrow = goBackwards => {\r\n        if (selectedDate == null) {\r\n            setSelectedDate(new Date());\r\n        } else if (goBackwards) {\r\n            let dateCopy = new Date(selectedDate);\r\n            dateCopy.setDate(selectedDate.getDate()-1);\r\n            setSelectedDate(dateCopy);\r\n        } else {\r\n            let dateCopy = new Date(selectedDate);\r\n            dateCopy.setDate(selectedDate.getDate()+1);\r\n            setSelectedDate(dateCopy);\r\n        }\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"container\" id =\"main\">\r\n            <TitleBar title={`${resName}'s Medication Counts`}>\r\n                <Button onClick={() => setShowAddMedicationForm(true)}>Add new Medication</Button>\r\n                <Button onClick={() => setShowAddCountForm(true)}>Add new count</Button>\r\n            </TitleBar>\r\n          <div className=\"row justify-content-center\" id =\"main2\">\r\n            <div className=\"count-intros\">\r\n                <h1>Select Historic Audit</h1>\r\n                <div className=\"count-date-picker\">\r\n                    <div>\r\n                        <ArrowLeft className={\"pointer\"} onClick={() => changeDateByArrow(true)} />\r\n                        <DatePicker type=\"date\" id=\"date-pick\" selected={selectedDate} onChange={e => setSelectedDate(new Date(e))} />\r\n                        <ArrowRight className={\"pointer right-pointer\"} onClick={() => changeDateByArrow(false)} />\r\n                    </div>\r\n                    <Button onClick={() => setSelectedDate(null)}>Clear Date</Button>\r\n                </div>\r\n            </div>\r\n            <Table\r\n                data-toggle = \"table\"\r\n                data-url=\"http://localhost:8080/show?medCountId={this.props.medCountId}\"\r\n                data-search =\"true\"\r\n                data-pagination = \"true\"\r\n                responsive>\r\n              <thead>\r\n              <tr>\r\n                <th data-field=\"name\"> Medication </th>\r\n                <th data-field=\"date\"> Date Recorded </th>\r\n                <th data-field=\"number\"> Count </th>\r\n                <th data-field=\"number\"> Morning or Evening </th>\r\n                <th data-field=\"name\"> Staff Name </th>\r\n                  <th data-field=\"end-prediction\"> Stock lasts until </th>\r\n              </tr>\r\n              </thead>\r\n              <tbody>\r\n              {renderTableData()}\r\n              </tbody>\r\n            </Table>\r\n          </div>\r\n            {showAddMedicationForm && <NewMedicationForm\r\n                resId={resId}\r\n                resName={resName}\r\n                pharmacies={pharmacies}\r\n                show={showAddMedicationForm}\r\n                handleClose={() => setShowAddMedicationForm(false)}\r\n                handleSubmission={() => {\r\n                    getMedications();\r\n                    setShowAddMedicationForm(false)}}\r\n            />\r\n            }\r\n            {showAddCountForm && <MedicationCountForm\r\n                resId={resId}\r\n                resName={resName}\r\n                resMedications={residentsMedications}\r\n                show={showAddCountForm}\r\n                handleClose={() => setShowAddCountForm(false)}\r\n                handleSubmission={() => {\r\n                    getCounts();\r\n                    setShowAddCountForm(false);\r\n                }}\r\n            />\r\n            }\r\n        </div>\r\n    );\r\n\r\n}\r\n\r\nexport default MedicationCountPage;","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\medication\\audit\\MedicationCountForm.js",["132","133","134","135","136","137","138","139","140"],"'use strict';\r\nimport React, { Component, useEffect, useState } from 'react'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport ReactDOM from 'react-dom'\r\nimport {FormCheck, FormControl, FormGroup, Modal, Row} from \"react-bootstrap\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport {backendUrl} from \"../../config\";\r\n\r\n\r\nconst MedicationCountForm = (props) => {\r\n    let {resName, resMedications, handleClose, handleSubmission, show} = props;\r\n\r\n    const [currMedForResId, setCurrMedForResId] = useState(resMedications[0] ? resMedications[0].medForResId : -1);\r\n    const [isMorningCount, setIsMorningCount] = useState();\r\n    const [count, setCount] = useState();\r\n    const [careWorkerName, setCareWorkerName] = useState();\r\n\r\n    resMedications = [{}, ...resMedications]; //adding blank record at the start\r\n\r\n    const sendCountToBackend = e => {\r\n        if (currMedForResId != undefined && currMedForResId !== \"\" &&\r\n            isMorningCount != undefined && count != undefined && careWorkerName != undefined) {\r\n            const data = {medForResId: currMedForResId, isMorningCount, count, careWorkerName};\r\n            fetch(`${backendUrl}/medicationcounts/add`,  {method: \"POST\", body: JSON.stringify(data), headers: {\"Content-Type\": \"application/json\"}})\r\n                .then(r => r.json())\r\n                .then(r => {\r\n                    console.log(r);\r\n                    handleSubmission();\r\n                })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Modal show={show} onHide={handleClose}>\r\n          <Modal.Header><Modal.Title>Adding a count for {resName}</Modal.Title></Modal.Header>\r\n          <Modal.Body>\r\n              <h5>Medication</h5>\r\n              <Form.Control as=\"select\" value={currMedForResId} onChange={e => {\r\n                  console.log(e.target)\r\n                  setCurrMedForResId(e.target.value)\r\n              }}>\r\n                  {resMedications.map((x,idx) => <option value={x.id} key={idx + x.medicationName}>{x.medicationName}</option>)}\r\n              </Form.Control>\r\n            <h5>Count:</h5>\r\n            <FormControl type={\"number\"} value={count} onChange={e => setCount(e.target.value)}/>\r\n            <h5>Which count is this?</h5>\r\n            <FormGroup>\r\n              <FormCheck type={\"radio\"} label={\"Morning count\"} name={\"countRadios\"} id={\"morning-radio\"}\r\n                        onClick={e => setIsMorningCount(true)} />\r\n              <FormCheck type={\"radio\"} label={\"Evening count\"} name={\"countRadios\"} id={\"evening-radio\"}\r\n                         onClick={e => setIsMorningCount(false)} />\r\n            </FormGroup>\r\n              <h5>Care worker who conducted count:</h5>\r\n              <FormControl value={careWorkerName} onChange={e => setCareWorkerName(e.target.value)} />\r\n          </Modal.Body>\r\n          <Modal.Footer>\r\n            <Button variant={\"secondary\"} onClick={handleClose}>Close</Button>\r\n            <Button variant={\"success\"} onClick={sendCountToBackend}>Submit!</Button>\r\n          </Modal.Footer>\r\n        </Modal>\r\n    );\r\n\r\n}\r\n\r\nexport default MedicationCountForm;\r\n","Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\pharmacy\\PharmacyPreview.js",["141"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\FullPageCentered.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\email\\ShowEmailContent.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\careworker\\EditCareWorkerForm.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\shared\\tooltip\\ParentTooltip.js",["142","143","144"],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\EditResidentForm.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\profile\\resident\\AddResidentForm.js",[],"Z:\\Users\\stv14\\Documents\\Devmain\\CS2001Group3-FrontEnd\\src\\Dashboard\\Dashboard.jsx",["145","146","147"],{"ruleId":"148","severity":1,"message":"149","line":17,"column":8,"nodeType":"150","messageId":"151","endLine":17,"endColumn":21},{"ruleId":"148","severity":1,"message":"152","line":25,"column":8,"nodeType":"150","messageId":"151","endLine":25,"endColumn":23},{"ruleId":"148","severity":1,"message":"153","line":74,"column":15,"nodeType":"150","messageId":"151","endLine":74,"endColumn":35},{"ruleId":"148","severity":1,"message":"154","line":93,"column":15,"nodeType":"150","messageId":"151","endLine":93,"endColumn":32},{"ruleId":"155","severity":1,"message":"156","line":107,"column":67,"nodeType":"157","endLine":107,"endColumn":121},{"ruleId":"158","severity":1,"message":"159","line":29,"column":8,"nodeType":"160","endLine":29,"endColumn":10,"suggestions":"161"},{"ruleId":"158","severity":1,"message":"162","line":24,"column":8,"nodeType":"160","endLine":24,"endColumn":10,"suggestions":"163"},{"ruleId":"148","severity":1,"message":"164","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":41},{"ruleId":"148","severity":1,"message":"165","line":2,"column":43,"nodeType":"150","messageId":"151","endLine":2,"endColumn":48},{"ruleId":"148","severity":1,"message":"166","line":2,"column":50,"nodeType":"150","messageId":"151","endLine":2,"endColumn":54},{"ruleId":"148","severity":1,"message":"152","line":8,"column":8,"nodeType":"150","messageId":"151","endLine":8,"endColumn":23},{"ruleId":"148","severity":1,"message":"167","line":9,"column":8,"nodeType":"150","messageId":"151","endLine":9,"endColumn":19},{"ruleId":"168","replacedBy":"169"},{"ruleId":"170","replacedBy":"171"},{"ruleId":"148","severity":1,"message":"164","line":2,"column":35,"nodeType":"150","messageId":"151","endLine":2,"endColumn":41},{"ruleId":"148","severity":1,"message":"165","line":2,"column":43,"nodeType":"150","messageId":"151","endLine":2,"endColumn":48},{"ruleId":"148","severity":1,"message":"166","line":2,"column":50,"nodeType":"150","messageId":"151","endLine":2,"endColumn":54},{"ruleId":"148","severity":1,"message":"172","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":14},{"ruleId":"173","severity":1,"message":"174","line":48,"column":76,"nodeType":"175","messageId":"176","endLine":48,"endColumn":78},{"ruleId":"168","replacedBy":"177"},{"ruleId":"170","replacedBy":"178"},{"ruleId":"173","severity":1,"message":"174","line":48,"column":82,"nodeType":"175","messageId":"176","endLine":48,"endColumn":84},{"ruleId":"158","severity":1,"message":"179","line":27,"column":8,"nodeType":"160","endLine":27,"endColumn":10,"suggestions":"180"},{"ruleId":"148","severity":1,"message":"181","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"182","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":13},{"ruleId":"148","severity":1,"message":"183","line":14,"column":9,"nodeType":"150","messageId":"151","endLine":14,"endColumn":18},{"ruleId":"148","severity":1,"message":"184","line":14,"column":20,"nodeType":"150","messageId":"151","endLine":14,"endColumn":31},{"ruleId":"148","severity":1,"message":"185","line":14,"column":33,"nodeType":"150","messageId":"151","endLine":14,"endColumn":42},{"ruleId":"148","severity":1,"message":"182","line":14,"column":44,"nodeType":"150","messageId":"151","endLine":14,"endColumn":49},{"ruleId":"148","severity":1,"message":"186","line":15,"column":9,"nodeType":"150","messageId":"151","endLine":15,"endColumn":12},{"ruleId":"148","severity":1,"message":"187","line":27,"column":21,"nodeType":"150","messageId":"151","endLine":27,"endColumn":28},{"ruleId":"158","severity":1,"message":"188","line":32,"column":8,"nodeType":"160","endLine":32,"endColumn":10,"suggestions":"189"},{"ruleId":"148","severity":1,"message":"190","line":60,"column":42,"nodeType":"150","messageId":"151","endLine":60,"endColumn":53},{"ruleId":"191","severity":1,"message":"192","line":1,"column":1,"nodeType":"193","messageId":"194","endLine":1,"endColumn":14,"fix":"195"},{"ruleId":"148","severity":1,"message":"181","line":2,"column":17,"nodeType":"150","messageId":"151","endLine":2,"endColumn":26},{"ruleId":"148","severity":1,"message":"196","line":2,"column":28,"nodeType":"150","messageId":"151","endLine":2,"endColumn":37},{"ruleId":"148","severity":1,"message":"197","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":16},{"ruleId":"148","severity":1,"message":"186","line":5,"column":51,"nodeType":"150","messageId":"151","endLine":5,"endColumn":54},{"ruleId":"173","severity":1,"message":"198","line":22,"column":29,"nodeType":"175","messageId":"176","endLine":22,"endColumn":31},{"ruleId":"173","severity":1,"message":"198","line":23,"column":28,"nodeType":"175","messageId":"176","endLine":23,"endColumn":30},{"ruleId":"173","severity":1,"message":"198","line":23,"column":50,"nodeType":"175","messageId":"176","endLine":23,"endColumn":52},{"ruleId":"173","severity":1,"message":"198","line":23,"column":81,"nodeType":"175","messageId":"176","endLine":23,"endColumn":83},{"ruleId":"148","severity":1,"message":"172","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":14},{"ruleId":"148","severity":1,"message":"196","line":1,"column":16,"nodeType":"150","messageId":"151","endLine":1,"endColumn":25},{"ruleId":"148","severity":1,"message":"199","line":1,"column":27,"nodeType":"150","messageId":"151","endLine":1,"endColumn":35},{"ruleId":"148","severity":1,"message":"200","line":2,"column":8,"nodeType":"150","messageId":"151","endLine":2,"endColumn":18},{"ruleId":"148","severity":1,"message":"181","line":1,"column":17,"nodeType":"150","messageId":"151","endLine":1,"endColumn":26},{"ruleId":"148","severity":1,"message":"166","line":3,"column":10,"nodeType":"150","messageId":"151","endLine":3,"endColumn":14},{"ruleId":"148","severity":1,"message":"201","line":4,"column":8,"nodeType":"150","messageId":"151","endLine":4,"endColumn":17},"no-unused-vars","'ParentTooltip' is defined but never used.","Identifier","unusedVar","'Residentprofile' is defined but never used.","'practiceTimelineData' is assigned a value but never used.","'medicationsAtTime' is assigned a value but never used.","react/jsx-pascal-case","Imported JSX component Medication_TEMP must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'getResDosages' and 'getResImg'. Either include them or remove the dependency array.","ArrayExpression",["202"],"React Hook useEffect has a missing dependency: 'getCwImg'. Either include it or remove the dependency array.",["203"],"'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'ArchResProf' is defined but never used.","no-native-reassign",["204"],"no-negated-in-lhs",["205"],"'Button' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",["204"],["205"],"React Hook useEffect has a missing dependency: 'requestId'. Either include it or remove the dependency array.",["206"],"'Component' is defined but never used.","'Modal' is defined but never used.","'FormCheck' is defined but never used.","'FormControl' is defined but never used.","'FormGroup' is defined but never used.","'Row' is defined but never used.","'medName' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'getCounts' and 'getMedications'. Either include them or remove the dependency array.",["207"],"'medForResId' is assigned a value but never used.","strict","'use strict' is unnecessary inside of modules.","ExpressionStatement","module",{"range":"208","text":"209"},"'useEffect' is defined but never used.","'ReactDOM' is defined but never used.","Expected '!==' and instead saw '!='.","'useState' is defined but never used.","'MedTooltip' is defined but never used.","'EmailPage' is defined but never used.",{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"no-global-assign","no-unsafe-negation",{"desc":"214","fix":"215"},{"desc":"216","fix":"217"},[0,13],"","Update the dependencies array to be: [getResDosages, getResImg]",{"range":"218","text":"219"},"Update the dependencies array to be: [getCwImg]",{"range":"220","text":"221"},"Update the dependencies array to be: [requestId]",{"range":"222","text":"223"},"Update the dependencies array to be: [getCounts, getMedications]",{"range":"224","text":"225"},[985,987],"[getResDosages, getResImg]",[844,846],"[getCwImg]",[1252,1254],"[requestId]",[1348,1350],"[getCounts, getMedications]"]